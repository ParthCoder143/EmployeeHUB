using EmployeeDAA.Core.Domain;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace EmployeeDAA.Data.Migrations
{
    [MigrationInfo("2024-02-02 17:50:00", "Initialize user related Schema")]

    public class UserMigration : FluentMigrator.Migration
    {

        public override void Up()
        {
            Create
              .Table(nameof(Role)).WithDescription("Role master")
              .WithColumn(nameof(Role.Id)).AsInt32().PrimaryKey().NotNullable().Identity().WithColumnDescription("Autogenerated unique identifier")
              .WithColumn(nameof(Role.Name)).AsAnsiString(100).NotNullable().WithColumnDescription("Role name")
              .WithColumn(nameof(Role.IsActive)).AsBoolean().NotNullable().WithColumnDescription("For display in further pages").WithDefaultValue(true)
              .WithColumn(nameof(Role.RoleType)).AsInt16().Nullable().WithColumnDescription("None = 0, Administrator = 1, ContentManager = 2, UserManager = 3, ReportsManager = 4, SecurityManager = 5, InventoryManager = 6, AnalyticsManager = 7, OrderManager = 8");

            Create
                .Table(nameof(User)).WithDescription("User table")
                .WithColumn(nameof(User.Id)).AsInt32().PrimaryKey().NotNullable().Identity().WithColumnDescription("Auto generated unique identifier")
                .WithColumn(nameof(User.UserId)).AsInt32().Nullable().WithColumnDescription("User id from another system.")
                .WithColumn(nameof(User.RoleId)).AsInt32().NotNullable().ForeignKey(nameof(Role), nameof(Role.Id)).WithColumnDescription("Role Id")
                .WithColumn(nameof(User.UserName)).AsString(250).NotNullable().WithColumnDescription("Username")
                .WithColumn(nameof(User.Password)).AsString(250).Nullable().WithColumnDescription("Password")
                .WithColumn(nameof(User.FirstName)).AsString(250).Nullable().WithColumnDescription("First Name ")
                .WithColumn(nameof(User.LastName)).AsString(250).Nullable().WithColumnDescription("Last Name")
                .WithColumn(nameof(User.Email)).AsString(250).Nullable().WithColumnDescription("Email")
                .WithColumn(nameof(User.Mobile)).AsString(250).Nullable().WithColumnDescription("Mobile")
                .WithColumn(nameof(User.IsDeleted)).AsBoolean().NotNullable().WithColumnDescription("For delete flag")

                .WithColumn(nameof(User.Photo)).AsString(250).Nullable().WithColumnDescription("Photo")
                .WithColumn(nameof(User.ModifyBy)).AsInt32().Nullable().WithColumnDescription("Modify By")
                .WithColumn(nameof(User.ModifyDate)).AsDateTime().Nullable().WithColumnDescription("Modify Date")

                .WithColumn(nameof(User.CameraUrl)).AsString(250).Nullable().WithColumnDescription("Camera Url")
                .WithColumn(nameof(User.IsActive)).AsBoolean().NotNullable().WithColumnDescription("Template active or not.")
                .WithColumn(nameof(User.UserToken)).AsString(250).Nullable().WithColumnDescription("Token");


            Create
            .Table(nameof(Permission)).WithDescription("Permission table")
            .WithColumn(nameof(Permission.Id)).AsInt32().PrimaryKey().NotNullable().Identity().WithColumnDescription("Auto generated unique identifier")
            .WithColumn(nameof(Permission.RoleId)).AsInt32().NotNullable().ForeignKey(nameof(Role), nameof(Role.Id)).WithColumnDescription("Role Id")
            .WithColumn(nameof(Permission.IsAdd)).AsBoolean().NotNullable().WithColumnDescription("Permission for add")
            .WithColumn(nameof(Permission.IsDelete)).AsBoolean().NotNullable().WithColumnDescription("Permission for delete")
            .WithColumn(nameof(Permission.IsEdit)).AsBoolean().NotNullable().WithColumnDescription("Permission for edit")
            .WithColumn(nameof(Permission.IsView)).AsBoolean().NotNullable().WithColumnDescription("Permission for view");

        }
        public override void Down()
        {


        }


    }
}
