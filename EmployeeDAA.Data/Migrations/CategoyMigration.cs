using DocumentFormat.OpenXml.Bibliography;
using DocumentFormat.OpenXml.Spreadsheet;
using EmployeeDAA.Core.Domain;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace EmployeeDAA.Data.Migrations
{

    [MigrationInfo("2021-09-13 09:17:12", "Initialize base Schema")]
    public class CategoyMigration : FluentMigrator.Migration
    {
        public override void Down()
        {
            throw new NotImplementedException();
        }

        public override void Up()
        {
            Create
                .Table(nameof(Categories)).WithDescription("Category master") //can also pass custom name e.g. .Table("ProductMst")
                .WithColumn(nameof(Categories.Id)).AsInt32().PrimaryKey().NotNullable().Identity().WithColumnDescription("Autogenerated unique identifier")
                .WithColumn(nameof(Categories.CategoryName)).AsAnsiString(100).NotNullable().WithColumnDescription("Category name")
                .WithColumn(nameof(Categories.IsActive)).AsBoolean().NotNullable().WithColumnDescription("For display in further pages")
                .WithColumn(nameof(Categories.IsDeleted)).AsBoolean().NotNullable().WithColumnDescription("For remove from system.. soft delete")
                .WithColumn(nameof(Categories.SortOrder)).AsDouble().Nullable().WithColumnDescription("For sorting order");


            Create
                .Table(nameof(Product)).WithDescription("Product details")
                .WithColumn(nameof(Product.Id)).AsInt32().PrimaryKey().NotNullable().Identity().WithColumnDescription("Autogenerated unique identifier")
                .WithColumn(nameof(Product.CategoryId)).AsInt32().ForeignKey(nameof(Categories), nameof(Categories.Id)).NotNullable().WithColumnDescription("Foreign key referencing the Category table")
                .WithColumn(nameof(Product.ProductName)).AsAnsiString(100).NotNullable().WithColumnDescription("Product name")
                .WithColumn(nameof(Product.Price)).AsDecimal().NotNullable().WithColumnDescription("Product price")
                .WithColumn(nameof(Product.Photo)).AsString(250).Nullable().WithColumnDescription("Photo")
                .WithColumn(nameof(Product.CameraUrl)).AsString(250).Nullable().WithColumnDescription("Camera Url")
                .WithColumn(nameof(Product.SortOrder)).AsDouble().Nullable().WithColumnDescription("For sorting order")
                .WithColumn(nameof(Product.IsActive)).AsBoolean().NotNullable().WithColumnDescription("For product display")
                .WithColumn(nameof(Product.IsDeleted)).AsBoolean().NotNullable().WithColumnDescription("For remove from system.. soft delete");
           
        }
    }
}
